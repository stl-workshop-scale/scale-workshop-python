# File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.

from __future__ import annotations

from typing import Dict, List, Union
from typing_extensions import Literal, Required, TypeAlias, TypedDict

__all__ = [
    "EvaluationDatasetCreateParams",
    "ManualEvaluationDatasetRequest",
    "AutoGeneratedEvaluationDatasetRequest",
    "SafetyEvaluationDatasetRequest",
]


class ManualEvaluationDatasetRequest(TypedDict, total=False):
    account_id: Required[str]
    """The ID of the account that owns the given entity."""

    kind_schema: Required[Literal["GENERATION", "FLEXIBLE"]]
    """The schema type of the dataset"""

    name: Required[str]
    """The name of the dataset"""

    type: Required[Literal["manual"]]
    """Manually or automatically generated dataset"""


class AutoGeneratedEvaluationDatasetRequest(TypedDict, total=False):
    account_id: Required[str]
    """The ID of the account that owns the given entity."""

    kind_schema: Required[Literal["GENERATION"]]
    """The schema type of the dataset. Only GENERATION is currently supported."""

    knowledge_base_id: Required[str]
    """ID of the knowledge base to generate the evaluation dataset from."""

    name: Required[str]
    """The name of the dataset"""

    type: Required[Literal["autogenerated"]]
    """Manually or automatically generated dataset"""


class SafetyEvaluationDatasetRequest(TypedDict, total=False):
    account_id: Required[str]
    """The ID of the account that owns the given entity."""

    advanced_config: Required[Dict[str, List[str]]]
    """Advanced configuration for the safety evaluation dataset."""

    harms_list: Required[List[str]]
    """List of harms to generate the dataset for."""

    kind_schema: Required[Literal["GENERATION"]]
    """The schema type of the dataset. Only GENERATION is currently supported."""

    name: Required[str]
    """The name of the dataset"""

    type: Required[Literal["safety"]]
    """Manually or automatically generated dataset"""


EvaluationDatasetCreateParams: TypeAlias = Union[
    ManualEvaluationDatasetRequest, AutoGeneratedEvaluationDatasetRequest, SafetyEvaluationDatasetRequest
]
